/* 
 * File:   internal_interrupt.h
 * Author: ideapad GAMING
 *
 * Created on August 27, 2023, 11:48 PM
 */

#ifndef INTERNAL_INTERRUPT_H
#define	INTERNAL_INTERRUPT_H
#include "interrupt_config.h"

#if  ADC_INTERRUT==ENABLE
#define ADC_INTERRUPT_ENABLE() (PIE1bits.ADIE=1)
#define ADC_INTERRUPT_DISABLE() (PIE1bits.ADIE=0)
#define ADC_INTERRUPT_CLEAR_FLAG()(PIR1bits.ADIF=0)

#if INTERRUPT_PRIORITY==ENABLE

#define ADC_INTERRUPT_HIGH_PRIORITY() (IPR1bits.ADIP=1)
#define ADC_INTERRUPT_LOW_PRIORITY() (IPR1bits.ADIP=0)

#endif

#endif
 


#if  TIMER0_INTERRUT==ENABLE
#define TIMER0_INTERRUPT_ENABLE() (INTCONbits.TMR0IE=1)
#define TIMER0_INTERRUPT_DISABLE() (INTCONbits.TMR0IE=0)
#define TIMER0_INTERRUPT_CLEAR_FLAG()(INTCONbits.TMR0IF=0)

#if INTERRUPT_PRIORITY==ENABLE

#define TIMER0_INTERRUPT_HIGH_PRIORITY() (INTCON2bits.TMR0IP=1)
#define TIMER0_INTERRUPT_LOW_PRIORITY() (INTCON2bits.TMR0IP=0)

#endif

#endif



#if  TIMER1_INTERRUT==ENABLE
#define TIMER1_INTERRUPT_ENABLE() (PIE1bits.TMR1IE=1)
#define TIMER1_INTERRUPT_DISABLE() (PIE1bits.TMR1IE=0)
#define TIMER1_INTERRUPT_CLEAR_FLAG()(PIR1bits.TMR1IF=0)

#if INTERRUPT_PRIORITY==ENABLE

#define TIMER1_INTERRUPT_HIGH_PRIORITY() (IPR1bits.TMR1IP=1)
#define TIMER1_INTERRUPT_LOW_PRIORITY() (IPR1bits.TMR1IP=0)

#endif

#endif




#if  TIMER2_INTERRUT==ENABLE
#define TIMER2_INTERRUPT_ENABLE() (PIE1bits.TMR2IE=1)
#define TIMER2_INTERRUPT_DISABLE() (PIE1bits.TMR2IE=0)
#define TIMER2_INTERRUPT_CLEAR_FLAG()(PIR1bits.TMR2IF=0)

#if INTERRUPT_PRIORITY==ENABLE

#define TIMER2_INTERRUPT_HIGH_PRIORITY() (IPR1bits.TMR2IP=1)
#define TIMER2_INTERRUPT_LOW_PRIORITY() (IPR1bits.TMR2IP=0)

#endif

#endif



#if  TIMER3_INTERRUT==ENABLE
#define TIMER3_INTERRUPT_ENABLE() (PIE2bits.TMR3IE=1)
#define TIMER3_INTERRUPT_DISABLE() (PIE2bits.TMR3IE=0)
#define TIMER3_INTERRUPT_CLEAR_FLAG()(PIR2bits.TMR3IF=0)

#if INTERRUPT_PRIORITY==ENABLE

#define TIMER3_INTERRUPT_HIGH_PRIORITY() (IPR2bits.TMR3IP=1)
#define TIMER3_INTERRUPT_LOW_PRIORITY() (IPR2bits.TMR3IP=0)

#endif

#endif




#if  CCP1_INTERRUT==ENABLE
#define CCP1_INTERRUPT_ENABLE() (PIE1bits.CCP1IE=1)
#define CCP1_INTERRUPT_DISABLE() (PIE1bits.CCP1IE=0)
#define CCP1_INTERRUPT_CLEAR_FLAG()(PIR1bits.CCP1IF=0)


#if INTERRUPT_PRIORITY==ENABLE

#define CCP1_INTERRUPT_HIGH_PRIORITY() (IPR1bits.CCP1IP=1)
#define CCP1_INTERRUPT_LOW_PRIORITY() (IPR1bits.CCP1IP=0)

#endif

#endif



#if  CCP2_INTERRUT==ENABLE
#define CCP2_INTERRUPT_ENABLE() (PIE2bits.CCP2IE=1)
#define CCP2_INTERRUPT_DISABLE() (PIE2bits.CCP2IE=0)

#define CCP2_INTERRUPT_CLEAR_FLAG()(PIR2bits.CCP2IF=0)

#if INTERRUPT_PRIORITY==ENABLE

#define CCP2_INTERRUPT_HIGH_PRIORITY() (IPR2bits.CCP2IP=1)
#define CCP2_INTERRUPT_LOW_PRIORITY() (IPR2bits.CCP2IP=0)

#endif

#endif



#if  TX_INTERRUT==ENABLE
#define TX_INTERRUPT_ENABLE() (PIE1bits.TXIE=1)
#define TX_INTERRUPT_DISABLE() (PIE1bits.TXIE=0)

//#define TX_INTERRUPT_CLEAR_FLAG()(PIR1bits.TXIF=0)

#if INTERRUPT_PRIORITY==ENABLE

#define TX_INTERRUPT_HIGH_PRIORITY() (IPR1bits.TXIP=1)
#define TX_INTERRUPT_LOW_PRIORITY() (IPR1bits.TXIP=0)

#endif

#endif




#if  RX_INTERRUT==ENABLE
#define RX_INTERRUPT_ENABLE() (PIE1bits.RCIE=1)
#define RX_INTERRUPT_DISABLE() (PIE1bits.RCIE=0)

#define RX_INTERRUPT_CLEAR_FLAG()(PIR1bits.RCIF=0)

#if INTERRUPT_PRIORITY==ENABLE

#define RX_INTERRUPT_HIGH_PRIORITY() (IPR1bits.RCIP=1)
#define RX_INTERRUPT_LOW_PRIORITY() (IPR1bits.RCIP=0)

#endif

#endif




#if  I2C_INTERRUT==ENABLE
#define I2C_INTERRUPT_ENABLE() (PIE1bits.SSPIE=1)
#define I2C_INTERRUPT_DISABLE() (PIE1bits.SSPIE=0)

#define I2C_INTERRUPT_CLEAR_FLAG()(PIR1bits.SSPIF=0)

#if INTERRUPT_PRIORITY==ENABLE

#define I2C_INTERRUPT_HIGH_PRIORITY() (IPR1bits.SSPIP=1)
#define I2C_INTERRUPT_LOW_PRIORITY() (IPR1bits.SSPIP=0)

#endif

#endif






#endif	/* INTERNAL_INTERRUPT_H */


Version 4.0 HI-TECH Software Intermediate Code
"1380 C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h
[v _TRISA `Vuc ~T0 @X0 0 e@3986 ]
"1602
[v _TRISB `Vuc ~T0 @X0 0 e@3987 ]
"1824
[v _TRISC `Vuc ~T0 @X0 0 e@3988 ]
"2046
[v _TRISD `Vuc ~T0 @X0 0 e@3989 ]
"2268
[v _TRISE `Vuc ~T0 @X0 0 e@3990 ]
"880
[v _LATA `Vuc ~T0 @X0 0 e@3977 ]
"992
[v _LATB `Vuc ~T0 @X0 0 e@3978 ]
"1104
[v _LATC `Vuc ~T0 @X0 0 e@3979 ]
"1216
[v _LATD `Vuc ~T0 @X0 0 e@3980 ]
"1328
[v _LATE `Vuc ~T0 @X0 0 e@3981 ]
"52
[v _PORTA `Vuc ~T0 @X0 0 e@3968 ]
"189
[v _PORTB `Vuc ~T0 @X0 0 e@3969 ]
"360
[v _PORTC `Vuc ~T0 @X0 0 e@3970 ]
"535
[v _PORTD `Vuc ~T0 @X0 0 e@3971 ]
"677
[v _PORTE `Vuc ~T0 @X0 0 e@3972 ]
"64 MCAL_layer/GPIO/../MCAL_std_types.h
[; ;MCAL_layer/GPIO/../MCAL_std_types.h: 64: {
[s S273 :3 `uc 1 :3 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S273 . my_pin my_port my_direction my_logic ]
"31 MCAL_layer/GPIO/hel_gpio.c
[; ;MCAL_layer/GPIO/hel_gpio.c: 31:         }
[c E2972 0 1 .. ]
[n E2972 . OUTPUT INPUT  ]
"71
[; ;MCAL_layer/GPIO/hel_gpio.c: 71:          }
[c E2968 0 1 .. ]
[n E2968 . LOW HIGH  ]
"141
[; ;MCAL_layer/GPIO/hel_gpio.c: 141: Std_ReturnType gio_port_init_direction(port_name_ myport , uint8 direc )
[c E2986 0 1 2 3 4 .. ]
[n E2986 . PORTa PORTb PORTc PORTd PORTe  ]
"54 C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h
[; <" PORTA equ 0F80h ;# ">
"191
[; <" PORTB equ 0F81h ;# ">
"362
[; <" PORTC equ 0F82h ;# ">
"537
[; <" PORTD equ 0F83h ;# ">
"679
[; <" PORTE equ 0F84h ;# ">
"882
[; <" LATA equ 0F89h ;# ">
"994
[; <" LATB equ 0F8Ah ;# ">
"1106
[; <" LATC equ 0F8Bh ;# ">
"1218
[; <" LATD equ 0F8Ch ;# ">
"1330
[; <" LATE equ 0F8Dh ;# ">
"1382
[; <" TRISA equ 0F92h ;# ">
"1387
[; <" DDRA equ 0F92h ;# ">
"1604
[; <" TRISB equ 0F93h ;# ">
"1609
[; <" DDRB equ 0F93h ;# ">
"1826
[; <" TRISC equ 0F94h ;# ">
"1831
[; <" DDRC equ 0F94h ;# ">
"2048
[; <" TRISD equ 0F95h ;# ">
"2053
[; <" DDRD equ 0F95h ;# ">
"2270
[; <" TRISE equ 0F96h ;# ">
"2275
[; <" DDRE equ 0F96h ;# ">
"2434
[; <" OSCTUNE equ 0F9Bh ;# ">
"2499
[; <" PIE1 equ 0F9Dh ;# ">
"2576
[; <" PIR1 equ 0F9Eh ;# ">
"2653
[; <" IPR1 equ 0F9Fh ;# ">
"2730
[; <" PIE2 equ 0FA0h ;# ">
"2796
[; <" PIR2 equ 0FA1h ;# ">
"2862
[; <" IPR2 equ 0FA2h ;# ">
"2928
[; <" EECON1 equ 0FA6h ;# ">
"2994
[; <" EECON2 equ 0FA7h ;# ">
"3001
[; <" EEDATA equ 0FA8h ;# ">
"3008
[; <" EEADR equ 0FA9h ;# ">
"3015
[; <" EEADRH equ 0FAAh ;# ">
"3022
[; <" RCSTA equ 0FABh ;# ">
"3027
[; <" RCSTA1 equ 0FABh ;# ">
"3232
[; <" TXSTA equ 0FACh ;# ">
"3237
[; <" TXSTA1 equ 0FACh ;# ">
"3488
[; <" TXREG equ 0FADh ;# ">
"3493
[; <" TXREG1 equ 0FADh ;# ">
"3500
[; <" RCREG equ 0FAEh ;# ">
"3505
[; <" RCREG1 equ 0FAEh ;# ">
"3512
[; <" SPBRG equ 0FAFh ;# ">
"3517
[; <" SPBRG1 equ 0FAFh ;# ">
"3524
[; <" SPBRGH equ 0FB0h ;# ">
"3531
[; <" T3CON equ 0FB1h ;# ">
"3643
[; <" TMR3 equ 0FB2h ;# ">
"3650
[; <" TMR3L equ 0FB2h ;# ">
"3657
[; <" TMR3H equ 0FB3h ;# ">
"3664
[; <" CMCON equ 0FB4h ;# ">
"3754
[; <" CVRCON equ 0FB5h ;# ">
"3833
[; <" ECCP1AS equ 0FB6h ;# ">
"3915
[; <" PWM1CON equ 0FB7h ;# ">
"3985
[; <" BAUDCON equ 0FB8h ;# ">
"3990
[; <" BAUDCTL equ 0FB8h ;# ">
"4157
[; <" CCP2CON equ 0FBAh ;# ">
"4236
[; <" CCPR2 equ 0FBBh ;# ">
"4243
[; <" CCPR2L equ 0FBBh ;# ">
"4250
[; <" CCPR2H equ 0FBCh ;# ">
"4257
[; <" CCP1CON equ 0FBDh ;# ">
"4354
[; <" CCPR1 equ 0FBEh ;# ">
"4361
[; <" CCPR1L equ 0FBEh ;# ">
"4368
[; <" CCPR1H equ 0FBFh ;# ">
"4375
[; <" ADCON2 equ 0FC0h ;# ">
"4446
[; <" ADCON1 equ 0FC1h ;# ">
"4531
[; <" ADCON0 equ 0FC2h ;# ">
"4650
[; <" ADRES equ 0FC3h ;# ">
"4657
[; <" ADRESL equ 0FC3h ;# ">
"4664
[; <" ADRESH equ 0FC4h ;# ">
"4671
[; <" SSPCON2 equ 0FC5h ;# ">
"4733
[; <" SSPCON1 equ 0FC6h ;# ">
"4803
[; <" SSPSTAT equ 0FC7h ;# ">
"5024
[; <" SSPADD equ 0FC8h ;# ">
"5031
[; <" SSPBUF equ 0FC9h ;# ">
"5038
[; <" T2CON equ 0FCAh ;# ">
"5109
[; <" PR2 equ 0FCBh ;# ">
"5114
[; <" MEMCON equ 0FCBh ;# ">
"5219
[; <" TMR2 equ 0FCCh ;# ">
"5226
[; <" T1CON equ 0FCDh ;# ">
"5329
[; <" TMR1 equ 0FCEh ;# ">
"5336
[; <" TMR1L equ 0FCEh ;# ">
"5343
[; <" TMR1H equ 0FCFh ;# ">
"5350
[; <" RCON equ 0FD0h ;# ">
"5483
[; <" WDTCON equ 0FD1h ;# ">
"5511
[; <" HLVDCON equ 0FD2h ;# ">
"5516
[; <" LVDCON equ 0FD2h ;# ">
"5781
[; <" OSCCON equ 0FD3h ;# ">
"5858
[; <" T0CON equ 0FD5h ;# ">
"5935
[; <" TMR0 equ 0FD6h ;# ">
"5942
[; <" TMR0L equ 0FD6h ;# ">
"5949
[; <" TMR0H equ 0FD7h ;# ">
"5956
[; <" STATUS equ 0FD8h ;# ">
"6027
[; <" FSR2 equ 0FD9h ;# ">
"6034
[; <" FSR2L equ 0FD9h ;# ">
"6041
[; <" FSR2H equ 0FDAh ;# ">
"6048
[; <" PLUSW2 equ 0FDBh ;# ">
"6055
[; <" PREINC2 equ 0FDCh ;# ">
"6062
[; <" POSTDEC2 equ 0FDDh ;# ">
"6069
[; <" POSTINC2 equ 0FDEh ;# ">
"6076
[; <" INDF2 equ 0FDFh ;# ">
"6083
[; <" BSR equ 0FE0h ;# ">
"6090
[; <" FSR1 equ 0FE1h ;# ">
"6097
[; <" FSR1L equ 0FE1h ;# ">
"6104
[; <" FSR1H equ 0FE2h ;# ">
"6111
[; <" PLUSW1 equ 0FE3h ;# ">
"6118
[; <" PREINC1 equ 0FE4h ;# ">
"6125
[; <" POSTDEC1 equ 0FE5h ;# ">
"6132
[; <" POSTINC1 equ 0FE6h ;# ">
"6139
[; <" INDF1 equ 0FE7h ;# ">
"6146
[; <" WREG equ 0FE8h ;# ">
"6158
[; <" FSR0 equ 0FE9h ;# ">
"6165
[; <" FSR0L equ 0FE9h ;# ">
"6172
[; <" FSR0H equ 0FEAh ;# ">
"6179
[; <" PLUSW0 equ 0FEBh ;# ">
"6186
[; <" PREINC0 equ 0FECh ;# ">
"6193
[; <" POSTDEC0 equ 0FEDh ;# ">
"6200
[; <" POSTINC0 equ 0FEEh ;# ">
"6207
[; <" INDF0 equ 0FEFh ;# ">
"6214
[; <" INTCON3 equ 0FF0h ;# ">
"6306
[; <" INTCON2 equ 0FF1h ;# ">
"6376
[; <" INTCON equ 0FF2h ;# ">
"6493
[; <" PROD equ 0FF3h ;# ">
"6500
[; <" PRODL equ 0FF3h ;# ">
"6507
[; <" PRODH equ 0FF4h ;# ">
"6514
[; <" TABLAT equ 0FF5h ;# ">
"6523
[; <" TBLPTR equ 0FF6h ;# ">
"6530
[; <" TBLPTRL equ 0FF6h ;# ">
"6537
[; <" TBLPTRH equ 0FF7h ;# ">
"6544
[; <" TBLPTRU equ 0FF8h ;# ">
"6553
[; <" PCLAT equ 0FF9h ;# ">
"6560
[; <" PC equ 0FF9h ;# ">
"6567
[; <" PCL equ 0FF9h ;# ">
"6574
[; <" PCLATH equ 0FFAh ;# ">
"6581
[; <" PCLATU equ 0FFBh ;# ">
"6588
[; <" STKPTR equ 0FFCh ;# ">
"6694
[; <" TOS equ 0FFDh ;# ">
"6701
[; <" TOSL equ 0FFDh ;# ">
"6708
[; <" TOSH equ 0FFEh ;# ">
"6715
[; <" TOSU equ 0FFFh ;# ">
"2 MCAL_layer/GPIO/hel_gpio.c
[; ;MCAL_layer/GPIO/hel_gpio.c: 2: volatile uint8 *TRIS_REG[]={&TRISA,&TRISB,&TRISC,&TRISD,&TRISE};
[v _TRIS_REG `*Vuc ~T0 @X0 -> 5 `i e ]
[i _TRIS_REG
:U ..
&U _TRISA
&U _TRISB
&U _TRISC
&U _TRISD
&U _TRISE
..
]
"3
[; ;MCAL_layer/GPIO/hel_gpio.c: 3: volatile uint8 *LAT_REG[]={&LATA,&LATB,&LATC,&LATD,&LATE};
[v _LAT_REG `*Vuc ~T0 @X0 -> 5 `i e ]
[i _LAT_REG
:U ..
&U _LATA
&U _LATB
&U _LATC
&U _LATD
&U _LATE
..
]
"4
[; ;MCAL_layer/GPIO/hel_gpio.c: 4: volatile uint8 *PORT_REG[]={&PORTA,&PORTB,&PORTC,&PORTD,&PORTE};
[v _PORT_REG `*Vuc ~T0 @X0 -> 5 `i e ]
[i _PORT_REG
:U ..
&U _PORTA
&U _PORTB
&U _PORTC
&U _PORTD
&U _PORTE
..
]
"7
[; ;MCAL_layer/GPIO/hel_gpio.c: 7: Std_ReturnType gio_pin_write_direction(pin_config* my_config,uint8 direc)
[v _gio_pin_write_direction `(uc ~T0 @X0 1 ef2`*S273`uc ]
"8
[; ;MCAL_layer/GPIO/hel_gpio.c: 8: { Std_ReturnType ret=(Std_ReturnType) 0x1;
{
[e :U _gio_pin_write_direction ]
"7
[; ;MCAL_layer/GPIO/hel_gpio.c: 7: Std_ReturnType gio_pin_write_direction(pin_config* my_config,uint8 direc)
[v _my_config `*S273 ~T0 @X0 1 r1 ]
[v _direc `uc ~T0 @X0 1 r2 ]
"8
[; ;MCAL_layer/GPIO/hel_gpio.c: 8: { Std_ReturnType ret=(Std_ReturnType) 0x1;
[f ]
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"10
[; ;MCAL_layer/GPIO/hel_gpio.c: 10:     if(my_config==((void*)0)|| (my_config->my_pin > 8 -1) || (my_config->my_port > 5 -1) )
[e $ ! || || == _my_config -> -> -> 0 `i `*v `*S273 > -> . *U _my_config 0 `i - -> 8 `i -> 1 `i > -> . *U _my_config 1 `i - -> 5 `i -> 1 `i 275  ]
"11
[; ;MCAL_layer/GPIO/hel_gpio.c: 11:     {
{
"12
[; ;MCAL_layer/GPIO/hel_gpio.c: 12:         ret=(Std_ReturnType) 0x0;
[e = _ret -> -> 0 `i `uc ]
"13
[; ;MCAL_layer/GPIO/hel_gpio.c: 13:     }
}
[e $U 276  ]
"14
[; ;MCAL_layer/GPIO/hel_gpio.c: 14:     else {
[e :U 275 ]
{
"15
[; ;MCAL_layer/GPIO/hel_gpio.c: 15:         switch (direc)
[e $U 278  ]
"16
[; ;MCAL_layer/GPIO/hel_gpio.c: 16:         {
{
"17
[; ;MCAL_layer/GPIO/hel_gpio.c: 17:           case OUTPUT:
[e :U 279 ]
"18
[; ;MCAL_layer/GPIO/hel_gpio.c: 18:                 (*TRIS_REG[my_config->my_port] &=~(1<<my_config->my_pin));
[e =& *U *U + &U _TRIS_REG * -> . *U _my_config 1 `ux -> -> # *U &U _TRIS_REG `ui `ux -> ~ << -> 1 `i -> . *U _my_config 0 `i `uc ]
"19
[; ;MCAL_layer/GPIO/hel_gpio.c: 19:                 my_config->my_direction=1;
[e = . *U _my_config 2 -> -> 1 `i `uc ]
"20
[; ;MCAL_layer/GPIO/hel_gpio.c: 20:                 break;
[e $U 277  ]
"22
[; ;MCAL_layer/GPIO/hel_gpio.c: 22:          case INPUT:
[e :U 280 ]
"23
[; ;MCAL_layer/GPIO/hel_gpio.c: 23:                 (*TRIS_REG[my_config->my_port] |=(1<<my_config->my_pin));
[e =| *U *U + &U _TRIS_REG * -> . *U _my_config 1 `ux -> -> # *U &U _TRIS_REG `ui `ux -> << -> 1 `i -> . *U _my_config 0 `i `uc ]
"24
[; ;MCAL_layer/GPIO/hel_gpio.c: 24:                 my_config->my_direction=0;
[e = . *U _my_config 2 -> -> 0 `i `uc ]
"26
[; ;MCAL_layer/GPIO/hel_gpio.c: 26:                 break;
[e $U 277  ]
"28
[; ;MCAL_layer/GPIO/hel_gpio.c: 28:             default:
[e :U 281 ]
"29
[; ;MCAL_layer/GPIO/hel_gpio.c: 29:                 ret=(Std_ReturnType) 0x0;
[e = _ret -> -> 0 `i `uc ]
"30
[; ;MCAL_layer/GPIO/hel_gpio.c: 30:                 break;
[e $U 277  ]
"31
[; ;MCAL_layer/GPIO/hel_gpio.c: 31:         }
}
[e $U 277  ]
[e :U 278 ]
[e [\ -> _direc `i , $ . `E2972 0 279
 , $ . `E2972 1 280
 281 ]
[e :U 277 ]
"32
[; ;MCAL_layer/GPIO/hel_gpio.c: 32:     }
}
[e :U 276 ]
"33
[; ;MCAL_layer/GPIO/hel_gpio.c: 33:         return ret;
[e ) _ret ]
[e $UE 274  ]
"34
[; ;MCAL_layer/GPIO/hel_gpio.c: 34: }
[e :UE 274 ]
}
"35
[; ;MCAL_layer/GPIO/hel_gpio.c: 35: Std_ReturnType gio_pin_read_direction(pin_config* my_config,uint8* direc )
[v _gio_pin_read_direction `(uc ~T0 @X0 1 ef2`*S273`*uc ]
"36
[; ;MCAL_layer/GPIO/hel_gpio.c: 36: {
{
[e :U _gio_pin_read_direction ]
"35
[; ;MCAL_layer/GPIO/hel_gpio.c: 35: Std_ReturnType gio_pin_read_direction(pin_config* my_config,uint8* direc )
[v _my_config `*S273 ~T0 @X0 1 r1 ]
[v _direc `*uc ~T0 @X0 1 r2 ]
"36
[; ;MCAL_layer/GPIO/hel_gpio.c: 36: {
[f ]
"37
[; ;MCAL_layer/GPIO/hel_gpio.c: 37:     Std_ReturnType ret=(Std_ReturnType) 0x1;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"38
[; ;MCAL_layer/GPIO/hel_gpio.c: 38:      if(my_config==((void*)0)|| (my_config->my_pin > 8 -1) || (my_config->my_port > 5 -1) )
[e $ ! || || == _my_config -> -> -> 0 `i `*v `*S273 > -> . *U _my_config 0 `i - -> 8 `i -> 1 `i > -> . *U _my_config 1 `i - -> 5 `i -> 1 `i 283  ]
"39
[; ;MCAL_layer/GPIO/hel_gpio.c: 39:     {
{
"40
[; ;MCAL_layer/GPIO/hel_gpio.c: 40:         ret=(Std_ReturnType) 0x0;
[e = _ret -> -> 0 `i `uc ]
"41
[; ;MCAL_layer/GPIO/hel_gpio.c: 41:     }
}
[e $U 284  ]
"42
[; ;MCAL_layer/GPIO/hel_gpio.c: 42:     else {
[e :U 283 ]
{
"43
[; ;MCAL_layer/GPIO/hel_gpio.c: 43:       *direc= ((*TRIS_REG[my_config->my_port] >>my_config->my_pin )&1);
[e = *U _direc -> & >> -> *U *U + &U _TRIS_REG * -> . *U _my_config 1 `ux -> -> # *U &U _TRIS_REG `ui `ux `i -> . *U _my_config 0 `i -> 1 `i `uc ]
"45
[; ;MCAL_layer/GPIO/hel_gpio.c: 45:     }
}
[e :U 284 ]
"46
[; ;MCAL_layer/GPIO/hel_gpio.c: 46: return ret;
[e ) _ret ]
[e $UE 282  ]
"48
[; ;MCAL_layer/GPIO/hel_gpio.c: 48: }
[e :UE 282 ]
}
"49
[; ;MCAL_layer/GPIO/hel_gpio.c: 49: Std_ReturnType gio_pin_write_logic(pin_config* my_config,uint8 logic )
[v _gio_pin_write_logic `(uc ~T0 @X0 1 ef2`*S273`uc ]
"50
[; ;MCAL_layer/GPIO/hel_gpio.c: 50: { Std_ReturnType ret=(Std_ReturnType) 0x1;
{
[e :U _gio_pin_write_logic ]
"49
[; ;MCAL_layer/GPIO/hel_gpio.c: 49: Std_ReturnType gio_pin_write_logic(pin_config* my_config,uint8 logic )
[v _my_config `*S273 ~T0 @X0 1 r1 ]
[v _logic `uc ~T0 @X0 1 r2 ]
"50
[; ;MCAL_layer/GPIO/hel_gpio.c: 50: { Std_ReturnType ret=(Std_ReturnType) 0x1;
[f ]
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"51
[; ;MCAL_layer/GPIO/hel_gpio.c: 51:      if(my_config==((void*)0)|| (my_config->my_pin > 8 -1) || (my_config->my_port > 5 -1) )
[e $ ! || || == _my_config -> -> -> 0 `i `*v `*S273 > -> . *U _my_config 0 `i - -> 8 `i -> 1 `i > -> . *U _my_config 1 `i - -> 5 `i -> 1 `i 286  ]
"52
[; ;MCAL_layer/GPIO/hel_gpio.c: 52:     {
{
"53
[; ;MCAL_layer/GPIO/hel_gpio.c: 53:         ret=(Std_ReturnType) 0x0;
[e = _ret -> -> 0 `i `uc ]
"54
[; ;MCAL_layer/GPIO/hel_gpio.c: 54:     }
}
[e $U 287  ]
"55
[; ;MCAL_layer/GPIO/hel_gpio.c: 55:     else {
[e :U 286 ]
{
"56
[; ;MCAL_layer/GPIO/hel_gpio.c: 56:         switch (logic)
[e $U 289  ]
"57
[; ;MCAL_layer/GPIO/hel_gpio.c: 57:         {
{
"58
[; ;MCAL_layer/GPIO/hel_gpio.c: 58:           case HIGH:
[e :U 290 ]
"59
[; ;MCAL_layer/GPIO/hel_gpio.c: 59:                 (*LAT_REG[my_config->my_port] |=(1<<my_config->my_pin));
[e =| *U *U + &U _LAT_REG * -> . *U _my_config 1 `ux -> -> # *U &U _LAT_REG `ui `ux -> << -> 1 `i -> . *U _my_config 0 `i `uc ]
"60
[; ;MCAL_layer/GPIO/hel_gpio.c: 60:                 my_config->my_logic=1;
[e = . *U _my_config 3 -> -> 1 `i `uc ]
"61
[; ;MCAL_layer/GPIO/hel_gpio.c: 61:                 break;
[e $U 288  ]
"63
[; ;MCAL_layer/GPIO/hel_gpio.c: 63:          case LOW:
[e :U 291 ]
"64
[; ;MCAL_layer/GPIO/hel_gpio.c: 64:                 (*LAT_REG[my_config->my_port] &=~(1<<my_config->my_pin));
[e =& *U *U + &U _LAT_REG * -> . *U _my_config 1 `ux -> -> # *U &U _LAT_REG `ui `ux -> ~ << -> 1 `i -> . *U _my_config 0 `i `uc ]
"65
[; ;MCAL_layer/GPIO/hel_gpio.c: 65:                  my_config->my_logic=0;
[e = . *U _my_config 3 -> -> 0 `i `uc ]
"66
[; ;MCAL_layer/GPIO/hel_gpio.c: 66:                 break;
[e $U 288  ]
"68
[; ;MCAL_layer/GPIO/hel_gpio.c: 68:             default:
[e :U 292 ]
"69
[; ;MCAL_layer/GPIO/hel_gpio.c: 69:                 ret=(Std_ReturnType) 0x0;
[e = _ret -> -> 0 `i `uc ]
"70
[; ;MCAL_layer/GPIO/hel_gpio.c: 70:                 break;
[e $U 288  ]
"71
[; ;MCAL_layer/GPIO/hel_gpio.c: 71:          }
}
[e $U 288  ]
[e :U 289 ]
[e [\ -> _logic `i , $ . `E2968 1 290
 , $ . `E2968 0 291
 292 ]
[e :U 288 ]
"72
[; ;MCAL_layer/GPIO/hel_gpio.c: 72:     }
}
[e :U 287 ]
"73
[; ;MCAL_layer/GPIO/hel_gpio.c: 73: return ret;
[e ) _ret ]
[e $UE 285  ]
"74
[; ;MCAL_layer/GPIO/hel_gpio.c: 74: }
[e :UE 285 ]
}
"77
[; ;MCAL_layer/GPIO/hel_gpio.c: 77: Std_ReturnType gio_pin_read_logic(pin_config* my_config,uint8* logic )
[v _gio_pin_read_logic `(uc ~T0 @X0 1 ef2`*S273`*uc ]
"78
[; ;MCAL_layer/GPIO/hel_gpio.c: 78: {
{
[e :U _gio_pin_read_logic ]
"77
[; ;MCAL_layer/GPIO/hel_gpio.c: 77: Std_ReturnType gio_pin_read_logic(pin_config* my_config,uint8* logic )
[v _my_config `*S273 ~T0 @X0 1 r1 ]
[v _logic `*uc ~T0 @X0 1 r2 ]
"78
[; ;MCAL_layer/GPIO/hel_gpio.c: 78: {
[f ]
"79
[; ;MCAL_layer/GPIO/hel_gpio.c: 79: Std_ReturnType ret=(Std_ReturnType) 0x1;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"80
[; ;MCAL_layer/GPIO/hel_gpio.c: 80:      if(my_config==((void*)0)|| (my_config->my_pin > 8 -1) || (my_config->my_port > 5 -1) )
[e $ ! || || == _my_config -> -> -> 0 `i `*v `*S273 > -> . *U _my_config 0 `i - -> 8 `i -> 1 `i > -> . *U _my_config 1 `i - -> 5 `i -> 1 `i 294  ]
"81
[; ;MCAL_layer/GPIO/hel_gpio.c: 81:     {
{
"82
[; ;MCAL_layer/GPIO/hel_gpio.c: 82:         ret=(Std_ReturnType) 0x0;
[e = _ret -> -> 0 `i `uc ]
"83
[; ;MCAL_layer/GPIO/hel_gpio.c: 83:     }
}
[e $U 295  ]
"84
[; ;MCAL_layer/GPIO/hel_gpio.c: 84:     else {
[e :U 294 ]
{
"85
[; ;MCAL_layer/GPIO/hel_gpio.c: 85:       *logic= ((*PORT_REG[my_config->my_port] >>my_config->my_pin )&1);
[e = *U _logic -> & >> -> *U *U + &U _PORT_REG * -> . *U _my_config 1 `ux -> -> # *U &U _PORT_REG `ui `ux `i -> . *U _my_config 0 `i -> 1 `i `uc ]
"87
[; ;MCAL_layer/GPIO/hel_gpio.c: 87:     }
}
[e :U 295 ]
"88
[; ;MCAL_layer/GPIO/hel_gpio.c: 88: return ret;
[e ) _ret ]
[e $UE 293  ]
"89
[; ;MCAL_layer/GPIO/hel_gpio.c: 89: }
[e :UE 293 ]
}
"90
[; ;MCAL_layer/GPIO/hel_gpio.c: 90: Std_ReturnType gio_pin_toggle_logic(pin_config* my_config)
[v _gio_pin_toggle_logic `(uc ~T0 @X0 1 ef1`*S273 ]
"91
[; ;MCAL_layer/GPIO/hel_gpio.c: 91: { Std_ReturnType ret=(Std_ReturnType) 0x1;
{
[e :U _gio_pin_toggle_logic ]
"90
[; ;MCAL_layer/GPIO/hel_gpio.c: 90: Std_ReturnType gio_pin_toggle_logic(pin_config* my_config)
[v _my_config `*S273 ~T0 @X0 1 r1 ]
"91
[; ;MCAL_layer/GPIO/hel_gpio.c: 91: { Std_ReturnType ret=(Std_ReturnType) 0x1;
[f ]
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"92
[; ;MCAL_layer/GPIO/hel_gpio.c: 92:      if(my_config==((void*)0)|| (my_config->my_pin > 8 -1) || (my_config->my_port > 5 -1) )
[e $ ! || || == _my_config -> -> -> 0 `i `*v `*S273 > -> . *U _my_config 0 `i - -> 8 `i -> 1 `i > -> . *U _my_config 1 `i - -> 5 `i -> 1 `i 297  ]
"93
[; ;MCAL_layer/GPIO/hel_gpio.c: 93:     {
{
"94
[; ;MCAL_layer/GPIO/hel_gpio.c: 94:         ret=(Std_ReturnType) 0x0;
[e = _ret -> -> 0 `i `uc ]
"95
[; ;MCAL_layer/GPIO/hel_gpio.c: 95:     }
}
[e $U 298  ]
"96
[; ;MCAL_layer/GPIO/hel_gpio.c: 96:     else
[e :U 297 ]
"97
[; ;MCAL_layer/GPIO/hel_gpio.c: 97:     {
{
"98
[; ;MCAL_layer/GPIO/hel_gpio.c: 98:           (*LAT_REG[my_config->my_port] ^=(1<<my_config->my_pin));
[e =^ *U *U + &U _LAT_REG * -> . *U _my_config 1 `ux -> -> # *U &U _LAT_REG `ui `ux -> << -> 1 `i -> . *U _my_config 0 `i `uc ]
"99
[; ;MCAL_layer/GPIO/hel_gpio.c: 99:           my_config->my_logic=!(my_config->my_logic);
[e = . *U _my_config 3 -> -> ! != -> . *U _my_config 3 `i -> 0 `i `i `uc ]
"103
[; ;MCAL_layer/GPIO/hel_gpio.c: 103:     }
}
[e :U 298 ]
"104
[; ;MCAL_layer/GPIO/hel_gpio.c: 104: return ret;
[e ) _ret ]
[e $UE 296  ]
"106
[; ;MCAL_layer/GPIO/hel_gpio.c: 106: }
[e :UE 296 ]
}
"117
[; ;MCAL_layer/GPIO/hel_gpio.c: 117: Std_ReturnType gio_pin_init(pin_config* my_config)
[v _gio_pin_init `(uc ~T0 @X0 1 ef1`*S273 ]
"118
[; ;MCAL_layer/GPIO/hel_gpio.c: 118: {
{
[e :U _gio_pin_init ]
"117
[; ;MCAL_layer/GPIO/hel_gpio.c: 117: Std_ReturnType gio_pin_init(pin_config* my_config)
[v _my_config `*S273 ~T0 @X0 1 r1 ]
"118
[; ;MCAL_layer/GPIO/hel_gpio.c: 118: {
[f ]
"119
[; ;MCAL_layer/GPIO/hel_gpio.c: 119: Std_ReturnType ret=(Std_ReturnType) 0x1;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"121
[; ;MCAL_layer/GPIO/hel_gpio.c: 121:     if(my_config==((void*)0)|| (my_config->my_pin > 8 -1) || (my_config->my_port > 5 -1) )
[e $ ! || || == _my_config -> -> -> 0 `i `*v `*S273 > -> . *U _my_config 0 `i - -> 8 `i -> 1 `i > -> . *U _my_config 1 `i - -> 5 `i -> 1 `i 300  ]
"122
[; ;MCAL_layer/GPIO/hel_gpio.c: 122:     {
{
"123
[; ;MCAL_layer/GPIO/hel_gpio.c: 123:         ret=(Std_ReturnType) 0x0;
[e = _ret -> -> 0 `i `uc ]
"124
[; ;MCAL_layer/GPIO/hel_gpio.c: 124:     }
}
[e $U 301  ]
"125
[; ;MCAL_layer/GPIO/hel_gpio.c: 125:     else
[e :U 300 ]
"126
[; ;MCAL_layer/GPIO/hel_gpio.c: 126:     {
{
"128
[; ;MCAL_layer/GPIO/hel_gpio.c: 128:         ret= gio_pin_write_direction(my_config,my_config->my_direction);
[e = _ret ( _gio_pin_write_direction (2 , _my_config . *U _my_config 2 ]
"129
[; ;MCAL_layer/GPIO/hel_gpio.c: 129:         ret= gio_pin_write_logic(my_config,my_config->my_logic);
[e = _ret ( _gio_pin_write_logic (2 , _my_config . *U _my_config 3 ]
"131
[; ;MCAL_layer/GPIO/hel_gpio.c: 131:     }
}
[e :U 301 ]
"132
[; ;MCAL_layer/GPIO/hel_gpio.c: 132:         return ret;
[e ) _ret ]
[e $UE 299  ]
"135
[; ;MCAL_layer/GPIO/hel_gpio.c: 135: }
[e :UE 299 ]
}
"141
[; ;MCAL_layer/GPIO/hel_gpio.c: 141: Std_ReturnType gio_port_init_direction(port_name_ myport , uint8 direc )
[v _gio_port_init_direction `(uc ~T0 @X0 1 ef2`E2986`uc ]
"142
[; ;MCAL_layer/GPIO/hel_gpio.c: 142: { Std_ReturnType ret=(Std_ReturnType) 0x0;
{
[e :U _gio_port_init_direction ]
"141
[; ;MCAL_layer/GPIO/hel_gpio.c: 141: Std_ReturnType gio_port_init_direction(port_name_ myport , uint8 direc )
[v _myport `E2986 ~T0 @X0 1 r1 ]
[v _direc `uc ~T0 @X0 1 r2 ]
"142
[; ;MCAL_layer/GPIO/hel_gpio.c: 142: { Std_ReturnType ret=(Std_ReturnType) 0x0;
[f ]
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"144
[; ;MCAL_layer/GPIO/hel_gpio.c: 144:     if( (myport > 5 -1) )
[e $ ! > -> _myport `ui -> - -> 5 `i -> 1 `i `ui 303  ]
"145
[; ;MCAL_layer/GPIO/hel_gpio.c: 145:     {
{
"146
[; ;MCAL_layer/GPIO/hel_gpio.c: 146:         ret=(Std_ReturnType) 0x0;
[e = _ret -> -> 0 `i `uc ]
"147
[; ;MCAL_layer/GPIO/hel_gpio.c: 147:     }
}
[e $U 304  ]
"148
[; ;MCAL_layer/GPIO/hel_gpio.c: 148:     else
[e :U 303 ]
"149
[; ;MCAL_layer/GPIO/hel_gpio.c: 149:     {
{
"150
[; ;MCAL_layer/GPIO/hel_gpio.c: 150:           *TRIS_REG[myport]=direc;
[e = *U *U + &U _TRIS_REG * -> _myport `ux -> -> # *U &U _TRIS_REG `ui `ux _direc ]
"152
[; ;MCAL_layer/GPIO/hel_gpio.c: 152:            ret=(Std_ReturnType) 0x1;
[e = _ret -> -> 1 `i `uc ]
"155
[; ;MCAL_layer/GPIO/hel_gpio.c: 155:     }
}
[e :U 304 ]
"156
[; ;MCAL_layer/GPIO/hel_gpio.c: 156: return ret;
[e ) _ret ]
[e $UE 302  ]
"157
[; ;MCAL_layer/GPIO/hel_gpio.c: 157: }
[e :UE 302 ]
}
"158
[; ;MCAL_layer/GPIO/hel_gpio.c: 158: Std_ReturnType gio_port_read_direction(port_name_ myport,uint8* direc )
[v _gio_port_read_direction `(uc ~T0 @X0 1 ef2`E2986`*uc ]
"159
[; ;MCAL_layer/GPIO/hel_gpio.c: 159: {
{
[e :U _gio_port_read_direction ]
"158
[; ;MCAL_layer/GPIO/hel_gpio.c: 158: Std_ReturnType gio_port_read_direction(port_name_ myport,uint8* direc )
[v _myport `E2986 ~T0 @X0 1 r1 ]
[v _direc `*uc ~T0 @X0 1 r2 ]
"159
[; ;MCAL_layer/GPIO/hel_gpio.c: 159: {
[f ]
"160
[; ;MCAL_layer/GPIO/hel_gpio.c: 160:     Std_ReturnType ret=(Std_ReturnType) 0x0;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"162
[; ;MCAL_layer/GPIO/hel_gpio.c: 162:     if( (myport > 5 -1) || (direc==((void*)0)) )
[e $ ! || > -> _myport `ui -> - -> 5 `i -> 1 `i `ui == _direc -> -> -> 0 `i `*v `*uc 306  ]
"163
[; ;MCAL_layer/GPIO/hel_gpio.c: 163:     {
{
"164
[; ;MCAL_layer/GPIO/hel_gpio.c: 164:         ret=(Std_ReturnType) 0x0;
[e = _ret -> -> 0 `i `uc ]
"165
[; ;MCAL_layer/GPIO/hel_gpio.c: 165:     }
}
[e $U 307  ]
"166
[; ;MCAL_layer/GPIO/hel_gpio.c: 166:     else
[e :U 306 ]
"167
[; ;MCAL_layer/GPIO/hel_gpio.c: 167:     {
{
"168
[; ;MCAL_layer/GPIO/hel_gpio.c: 168:           *direc=*TRIS_REG[myport];
[e = *U _direc *U *U + &U _TRIS_REG * -> _myport `ux -> -> # *U &U _TRIS_REG `ui `ux ]
"170
[; ;MCAL_layer/GPIO/hel_gpio.c: 170:            ret=(Std_ReturnType) 0x1;
[e = _ret -> -> 1 `i `uc ]
"173
[; ;MCAL_layer/GPIO/hel_gpio.c: 173:     }
}
[e :U 307 ]
"174
[; ;MCAL_layer/GPIO/hel_gpio.c: 174: return ret;
[e ) _ret ]
[e $UE 305  ]
"175
[; ;MCAL_layer/GPIO/hel_gpio.c: 175: }
[e :UE 305 ]
}
"176
[; ;MCAL_layer/GPIO/hel_gpio.c: 176: Std_ReturnType gio_port_write_logic(port_name_ myport,uint8 logic )
[v _gio_port_write_logic `(uc ~T0 @X0 1 ef2`E2986`uc ]
"177
[; ;MCAL_layer/GPIO/hel_gpio.c: 177: { Std_ReturnType ret=(Std_ReturnType) 0x0;
{
[e :U _gio_port_write_logic ]
"176
[; ;MCAL_layer/GPIO/hel_gpio.c: 176: Std_ReturnType gio_port_write_logic(port_name_ myport,uint8 logic )
[v _myport `E2986 ~T0 @X0 1 r1 ]
[v _logic `uc ~T0 @X0 1 r2 ]
"177
[; ;MCAL_layer/GPIO/hel_gpio.c: 177: { Std_ReturnType ret=(Std_ReturnType) 0x0;
[f ]
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"179
[; ;MCAL_layer/GPIO/hel_gpio.c: 179:     if( (myport > 5 -1) )
[e $ ! > -> _myport `ui -> - -> 5 `i -> 1 `i `ui 309  ]
"180
[; ;MCAL_layer/GPIO/hel_gpio.c: 180:     {
{
"181
[; ;MCAL_layer/GPIO/hel_gpio.c: 181:         ret=(Std_ReturnType) 0x0;
[e = _ret -> -> 0 `i `uc ]
"182
[; ;MCAL_layer/GPIO/hel_gpio.c: 182:     }
}
[e $U 310  ]
"183
[; ;MCAL_layer/GPIO/hel_gpio.c: 183:     else
[e :U 309 ]
"184
[; ;MCAL_layer/GPIO/hel_gpio.c: 184:     {
{
"185
[; ;MCAL_layer/GPIO/hel_gpio.c: 185:           *LAT_REG[myport]=logic;
[e = *U *U + &U _LAT_REG * -> _myport `ux -> -> # *U &U _LAT_REG `ui `ux _logic ]
"187
[; ;MCAL_layer/GPIO/hel_gpio.c: 187:            ret=(Std_ReturnType) 0x1;
[e = _ret -> -> 1 `i `uc ]
"190
[; ;MCAL_layer/GPIO/hel_gpio.c: 190:     }
}
[e :U 310 ]
"191
[; ;MCAL_layer/GPIO/hel_gpio.c: 191: return ret;
[e ) _ret ]
[e $UE 308  ]
"192
[; ;MCAL_layer/GPIO/hel_gpio.c: 192: }
[e :UE 308 ]
}
"193
[; ;MCAL_layer/GPIO/hel_gpio.c: 193: Std_ReturnType gio_port_read_logic(port_name_ myport,uint8* logic )
[v _gio_port_read_logic `(uc ~T0 @X0 1 ef2`E2986`*uc ]
"194
[; ;MCAL_layer/GPIO/hel_gpio.c: 194: {
{
[e :U _gio_port_read_logic ]
"193
[; ;MCAL_layer/GPIO/hel_gpio.c: 193: Std_ReturnType gio_port_read_logic(port_name_ myport,uint8* logic )
[v _myport `E2986 ~T0 @X0 1 r1 ]
[v _logic `*uc ~T0 @X0 1 r2 ]
"194
[; ;MCAL_layer/GPIO/hel_gpio.c: 194: {
[f ]
"195
[; ;MCAL_layer/GPIO/hel_gpio.c: 195: Std_ReturnType ret=(Std_ReturnType) 0x0;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"197
[; ;MCAL_layer/GPIO/hel_gpio.c: 197:     if( (myport > 5 -1) || (logic==((void*)0)) )
[e $ ! || > -> _myport `ui -> - -> 5 `i -> 1 `i `ui == _logic -> -> -> 0 `i `*v `*uc 312  ]
"198
[; ;MCAL_layer/GPIO/hel_gpio.c: 198:     {
{
"199
[; ;MCAL_layer/GPIO/hel_gpio.c: 199:         ret=(Std_ReturnType) 0x0;
[e = _ret -> -> 0 `i `uc ]
"200
[; ;MCAL_layer/GPIO/hel_gpio.c: 200:     }
}
[e $U 313  ]
"201
[; ;MCAL_layer/GPIO/hel_gpio.c: 201:     else
[e :U 312 ]
"202
[; ;MCAL_layer/GPIO/hel_gpio.c: 202:     {
{
"203
[; ;MCAL_layer/GPIO/hel_gpio.c: 203:           *logic=*PORT_REG[myport];
[e = *U _logic *U *U + &U _PORT_REG * -> _myport `ux -> -> # *U &U _PORT_REG `ui `ux ]
"205
[; ;MCAL_layer/GPIO/hel_gpio.c: 205:            ret=(Std_ReturnType) 0x1;
[e = _ret -> -> 1 `i `uc ]
"208
[; ;MCAL_layer/GPIO/hel_gpio.c: 208:     }
}
[e :U 313 ]
"209
[; ;MCAL_layer/GPIO/hel_gpio.c: 209: return ret;
[e ) _ret ]
[e $UE 311  ]
"210
[; ;MCAL_layer/GPIO/hel_gpio.c: 210: }
[e :UE 311 ]
}
"211
[; ;MCAL_layer/GPIO/hel_gpio.c: 211: Std_ReturnType gio_port_toggle_logic(port_name_ myport)
[v _gio_port_toggle_logic `(uc ~T0 @X0 1 ef1`E2986 ]
"212
[; ;MCAL_layer/GPIO/hel_gpio.c: 212:  {
{
[e :U _gio_port_toggle_logic ]
"211
[; ;MCAL_layer/GPIO/hel_gpio.c: 211: Std_ReturnType gio_port_toggle_logic(port_name_ myport)
[v _myport `E2986 ~T0 @X0 1 r1 ]
"212
[; ;MCAL_layer/GPIO/hel_gpio.c: 212:  {
[f ]
"213
[; ;MCAL_layer/GPIO/hel_gpio.c: 213: Std_ReturnType ret=(Std_ReturnType) 0x0;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"215
[; ;MCAL_layer/GPIO/hel_gpio.c: 215:     if( (myport > 5 -1) )
[e $ ! > -> _myport `ui -> - -> 5 `i -> 1 `i `ui 315  ]
"216
[; ;MCAL_layer/GPIO/hel_gpio.c: 216:     {
{
"217
[; ;MCAL_layer/GPIO/hel_gpio.c: 217:         ret=(Std_ReturnType) 0x0;
[e = _ret -> -> 0 `i `uc ]
"218
[; ;MCAL_layer/GPIO/hel_gpio.c: 218:     }
}
[e $U 316  ]
"219
[; ;MCAL_layer/GPIO/hel_gpio.c: 219:     else
[e :U 315 ]
"220
[; ;MCAL_layer/GPIO/hel_gpio.c: 220:     {
{
"221
[; ;MCAL_layer/GPIO/hel_gpio.c: 221:             *LAT_REG[myport]=~ (*LAT_REG[myport]);
[e = *U *U + &U _LAT_REG * -> _myport `ux -> -> # *U &U _LAT_REG `ui `ux -> ~ -> *U *U + &U _LAT_REG * -> _myport `ux -> -> # *U &U _LAT_REG `ui `ux `i `uc ]
"224
[; ;MCAL_layer/GPIO/hel_gpio.c: 224:            ret=(Std_ReturnType) 0x1;
[e = _ret -> -> 1 `i `uc ]
"227
[; ;MCAL_layer/GPIO/hel_gpio.c: 227:     }
}
[e :U 316 ]
"228
[; ;MCAL_layer/GPIO/hel_gpio.c: 228: return ret;
[e ) _ret ]
[e $UE 314  ]
"229
[; ;MCAL_layer/GPIO/hel_gpio.c: 229: }
[e :UE 314 ]
}
